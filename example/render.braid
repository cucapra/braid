# Position the model.
var model = mat4.create();
mat4.scale(model, model, vec3(10.0, 10.0, 10.0));
mat4.rotateY(model, model, 1.0);

# Define vertex positions of this cube.
var positionArray = array(
  # positionArray[0] should be vec3(-1, -1,  1).
  # positionArray[10] should be vec3(1, 1, 1)),
  #   which is equal to positionArray[2].

  # front
  vec3(1000, 1000,  1000), vec3(1, -1, 1),
  vec3(1, 1, 1), vec3(-1, 1, 1),
  # back
  vec3(-1, -1, -1), vec3(-1, 1, -1),
  vec3(1, 1, -1), vec3(1, -1, -1),
  # top
  vec3(-1, 1, -1), vec3(-1, 1, 1),
  vec3(1000, 1000, 1000), vec3(1, 1, -1),
  # bottom
  vec3(-1, -1, -1), vec3(1, -1, -1),
  vec3(1, -1, 1), vec3(-1, -1, 1),
  # right
  vec3(1, -1, -1), vec3(1, 1, -1),
  vec3(1, 1, 1), vec3(1, -1, 1),
  # left
  vec3(-1, -1, -1), vec3(-1, -1, 1),
  vec3(-1, 1, 1), vec3(-1, 1, -1)
);

# Correct the positionArray using setter and getter.
var pos_0 = vec3(-1, -1,  1);
set(positionArray, 0, pos_0);
var pos_10 = get(positionArray, 2);
set(positionArray, 10, pos_10);

# Define texture coordinates of this cube.
var texcoordArray = array(
  # texcoordArray's length should be 24.
  # The last element is vec2(0, 1).

  # front
  vec2(0, 0), vec2(1, 0),
  vec2(1, 1), vec2(0, 1),
  # back
  vec2(1, 0), vec2(1, 1),
  vec2(0, 1), vec2(0, 0),
  # top
  vec2(0, 1), vec2(0, 0),
  vec2(1, 0), vec2(1, 1),
  # bottom
  vec2(1, 1), vec2(0, 1),
  vec2(0, 0), vec2(1, 0),
  # right
  vec2(1, 0), vec2(1, 1),
  vec2(0, 1), vec2(0, 0),
  # left
  vec2(0, 0), vec2(1, 0),
  vec2(1, 1) # missing vec2(0, 1) here
);

# Correct the positionArray by appending a new value to the texcoordArray.
push(texcoordArray, vec2(0, 1));

# Define vertex indices of this cube.
var indicesArray = array(
  0, 1, 2,      0, 2, 3,    # Front face
  4, 5, 6,      4, 6, 7,    # Back face
  8, 9, 10,     8, 10, 11,  # Top face
  12, 13, 14,   12, 14, 15, # Bottom face
  16, 17, 18,   16, 18, 19, # Right face
  20, 21, 22,   20, 22, 23  # Left face
);

# Construct buffers for this cube
var position = array_buffer(positionArray);
var texcoord = array_buffer(texcoordArray);
var indices = element_buffer(indicesArray);

render js<
  vertex glsl<
    gl_Position = model * vec4(position, 1.0);
    fragment glsl<
      gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);
    >
  >;
  draw_mesh(indices, 36);
>
